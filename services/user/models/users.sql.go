// Code generated by sqlc. DO NOT EDIT.
// source: users.sql

package models

import (
	"context"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const getUser = `-- name: GetUser :one
SELECT id, name, tags FROM users WHERE id = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, id uuid.UUID) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	var i User
	err := row.Scan(&i.ID, &i.Name, pq.Array(&i.Tags))
	return i, err
}

const getUserTags = `-- name: GetUserTags :one
SELECT tags FROM users WHERE id = $1
`

func (q *Queries) GetUserTags(ctx context.Context, id uuid.UUID) ([]string, error) {
	row := q.db.QueryRowContext(ctx, getUserTags, id)
	var tags []string
	err := row.Scan(pq.Array(&tags))
	return tags, err
}

const updateUserTags = `-- name: UpdateUserTags :exec
UPDATE users SET tags = $1
`

func (q *Queries) UpdateUserTags(ctx context.Context, tags []string) error {
	_, err := q.db.ExecContext(ctx, updateUserTags, pq.Array(tags))
	return err
}
